# Form implementation generated from reading ui file 'newEditRiskUIForm.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import logging
from PyQt6 import QtCore, QtGui, QtWidgets
from db_operation_functions import queryComposer
from functools import partial

logging.basicConfig(level=logging.WARNING)


class editRiskUIDialog(object):
    def setupUi(self, Dialog, risk_id):
        Dialog.setObjectName("Dialog")
        Dialog.resize(510, 510)
        self.h_layout_widget = QtWidgets.QWidget(parent=Dialog)
        self.h_layout_widget.setGeometry(QtCore.QRect(290, 460, 195, 40))
        self.h_layout_widget.setObjectName("h_layout_widget")
        self.h_button_layout_widget = QtWidgets.QHBoxLayout(self.h_layout_widget)
        self.h_button_layout_widget.setContentsMargins(0, 0, 0, 0)
        self.h_button_layout_widget.setObjectName("h_button_layout_widget")
        self.confirm_button = QtWidgets.QPushButton(parent=self.h_layout_widget)
        self.confirm_button.setObjectName("confirm_button")
        _confirm_button_slot = partial(self.confirm_button_slot, Dialog=Dialog)
        self.confirm_button.clicked.connect(_confirm_button_slot)
        self.h_button_layout_widget.addWidget(self.confirm_button)
        self.cancel_button = QtWidgets.QPushButton(parent=self.h_layout_widget)
        self.cancel_button.setObjectName("cancel_button")
        self.cancel_button.clicked.connect(lambda: Dialog.close())
        self.h_button_layout_widget.addWidget(self.cancel_button)
        self.v_layout_widget = QtWidgets.QWidget(parent=Dialog)
        self.v_layout_widget.setGeometry(QtCore.QRect(15, 15, 470, 435))
        self.v_layout_widget.setObjectName("v_layout_widget")
        self.v_layout_widget_fields = QtWidgets.QVBoxLayout(self.v_layout_widget)
        self.v_layout_widget_fields.setContentsMargins(0, 0, 0, 0)
        self.v_layout_widget_fields.setObjectName("v_layout_widget_fields")
        self.f_layout_widget = QtWidgets.QFormLayout()
        self.f_layout_widget.setHorizontalSpacing(20)
        self.f_layout_widget.setVerticalSpacing(20)
        self.f_layout_widget.setObjectName("f_layout_widget")
        self.risk_name_label = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_name_label.setObjectName("risk_name_label")
        self.f_layout_widget.setWidget(
            0, QtWidgets.QFormLayout.ItemRole.LabelRole, self.risk_name_label
        )
        self.risk_name_field = QtWidgets.QLineEdit(parent=self.v_layout_widget)
        self.risk_name_field.setObjectName("risk_name_field")
        self.f_layout_widget.setWidget(
            0, QtWidgets.QFormLayout.ItemRole.FieldRole, self.risk_name_field
        )
        self.risk_class_label = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_class_label.setObjectName("risk_class_label")
        self.f_layout_widget.setWidget(
            1, QtWidgets.QFormLayout.ItemRole.LabelRole, self.risk_class_label
        )
        self.risk_class_combobox = QtWidgets.QComboBox(parent=self.v_layout_widget)
        self.risk_class_combobox.setObjectName("risk_class_combobox")
        self.f_layout_widget.setWidget(
            1, QtWidgets.QFormLayout.ItemRole.FieldRole, self.risk_class_combobox
        )
        self.v_layout_widget_fields.addLayout(self.f_layout_widget)
        self.f_layout_widget_3 = QtWidgets.QFormLayout()
        self.f_layout_widget_3.setHorizontalSpacing(20)
        self.f_layout_widget_3.setVerticalSpacing(0)
        self.f_layout_widget_3.setObjectName("f_layout_widget_3")
        self.risk_prob_label = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_prob_label.setObjectName("risk_prob_label")
        self.f_layout_widget_3.setWidget(
            0, QtWidgets.QFormLayout.ItemRole.LabelRole, self.risk_prob_label
        )
        self.risk_prob_symbol = QtWidgets.QLabel(parent=self.v_layout_widget)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.risk_prob_symbol.setFont(font)
        self.risk_prob_symbol.setAlignment(
            QtCore.Qt.AlignmentFlag.AlignRight
            | QtCore.Qt.AlignmentFlag.AlignTop
            | QtCore.Qt.AlignmentFlag.AlignTrailing
        )
        self.risk_prob_symbol.setObjectName("risk_prob_symbol")
        self.f_layout_widget_3.setWidget(
            1, QtWidgets.QFormLayout.ItemRole.LabelRole, self.risk_prob_symbol
        )
        self.h_layout_widget_prob = QtWidgets.QHBoxLayout()
        self.h_layout_widget_prob.setObjectName("h_layout_widget_prob")
        self.risk_prob_lower_edge = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_prob_lower_edge.setObjectName("risk_prob_lower_edge")
        self.h_layout_widget_prob.addWidget(self.risk_prob_lower_edge)
        self.risk_prob_higher_edge = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_prob_higher_edge.setAlignment(
            QtCore.Qt.AlignmentFlag.AlignRight
            | QtCore.Qt.AlignmentFlag.AlignTrailing
            | QtCore.Qt.AlignmentFlag.AlignVCenter
        )
        self.risk_prob_higher_edge.setObjectName("risk_prob_higher_edge")
        self.h_layout_widget_prob.addWidget(self.risk_prob_higher_edge)
        self.f_layout_widget_3.setLayout(
            1, QtWidgets.QFormLayout.ItemRole.FieldRole, self.h_layout_widget_prob
        )
        self.risk_prob_slider = QtWidgets.QSlider(parent=self.v_layout_widget)
        self.risk_prob_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.risk_prob_slider.setTickPosition(QtWidgets.QSlider.TickPosition.TicksBelow)
        self.risk_prob_slider.setMinimum(0)
        self.risk_prob_slider.setMaximum(100)
        self.risk_prob_slider.valueChanged.connect(self.probability_slider_slot)
        self.risk_prob_slider.setTickInterval(25)
        self.risk_prob_slider.setObjectName("risk_prob_slider")
        self.f_layout_widget_3.setWidget(
            0, QtWidgets.QFormLayout.ItemRole.FieldRole, self.risk_prob_slider
        )
        self.v_layout_widget_fields.addLayout(self.f_layout_widget_3)
        self.f_layout_widget_4 = QtWidgets.QFormLayout()
        self.f_layout_widget_4.setHorizontalSpacing(20)
        self.f_layout_widget_4.setVerticalSpacing(0)
        self.f_layout_widget_4.setObjectName("f_layout_widget_4")
        self.risk_damage_label = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_damage_label.setObjectName("risk_damage_label")
        self.f_layout_widget_4.setWidget(
            0, QtWidgets.QFormLayout.ItemRole.LabelRole, self.risk_damage_label
        )
        self.risk_damage_slider = QtWidgets.QSlider(parent=self.v_layout_widget)
        self.risk_damage_slider.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.risk_damage_slider.setTickPosition(
            QtWidgets.QSlider.TickPosition.TicksBelow
        )
        self.risk_damage_slider.setMinimum(0)
        self.risk_damage_slider.setMaximum(100)
        self.risk_damage_slider.valueChanged.connect(self.damage_slider_slot)
        self.risk_damage_slider.setTickInterval(25)
        self.risk_damage_slider.setObjectName("risk_damage_slider")
        self.f_layout_widget_4.setWidget(
            0, QtWidgets.QFormLayout.ItemRole.FieldRole, self.risk_damage_slider
        )
        self.risk_damage_symbol = QtWidgets.QLabel(parent=self.v_layout_widget)
        font = QtGui.QFont()
        font.setPointSize(7)
        font.setKerning(True)
        self.risk_damage_symbol.setFont(font)
        self.risk_damage_symbol.setAlignment(
            QtCore.Qt.AlignmentFlag.AlignLeading
            | QtCore.Qt.AlignmentFlag.AlignLeft
            | QtCore.Qt.AlignmentFlag.AlignTop
        )
        self.risk_damage_symbol.setObjectName("risk_damage_symbol")
        self.f_layout_widget_4.setWidget(
            1, QtWidgets.QFormLayout.ItemRole.LabelRole, self.risk_damage_symbol
        )
        self.h_layout_damage = QtWidgets.QHBoxLayout()
        self.h_layout_damage.setObjectName("h_layout_damage")
        self.risk_damage_lower_edge = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_damage_lower_edge.setObjectName("risk_damage_lower_edge")
        self.h_layout_damage.addWidget(self.risk_damage_lower_edge)
        self.risk_damage_higher_edge = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_damage_higher_edge.setAlignment(
            QtCore.Qt.AlignmentFlag.AlignRight
            | QtCore.Qt.AlignmentFlag.AlignTrailing
            | QtCore.Qt.AlignmentFlag.AlignVCenter
        )
        self.risk_damage_higher_edge.setObjectName("risk_damage_higher_edge")
        self.h_layout_damage.addWidget(self.risk_damage_higher_edge)
        self.f_layout_widget_4.setLayout(
            1, QtWidgets.QFormLayout.ItemRole.FieldRole, self.h_layout_damage
        )
        self.v_layout_widget_fields.addLayout(self.f_layout_widget_4)
        self.f_layout_widget_2 = QtWidgets.QFormLayout()
        self.f_layout_widget_2.setHorizontalSpacing(20)
        self.f_layout_widget_2.setVerticalSpacing(20)
        self.f_layout_widget_2.setObjectName("f_layout_widget_2")
        self.risk_details_label = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_details_label.setAlignment(
            QtCore.Qt.AlignmentFlag.AlignLeading
            | QtCore.Qt.AlignmentFlag.AlignLeft
            | QtCore.Qt.AlignmentFlag.AlignTop
        )
        self.risk_details_label.setObjectName("risk_details_label")
        self.f_layout_widget_2.setWidget(
            2, QtWidgets.QFormLayout.ItemRole.LabelRole, self.risk_details_label
        )
        self.risk_details_field = QtWidgets.QTextEdit(parent=self.v_layout_widget)
        self.risk_details_field.setObjectName("risk_details_field")
        self.f_layout_widget_2.setWidget(
            2, QtWidgets.QFormLayout.ItemRole.FieldRole, self.risk_details_field
        )
        self.risk_holder_label = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_holder_label.setObjectName("risk_holder_label")
        self.f_layout_widget_2.setWidget(
            1, QtWidgets.QFormLayout.ItemRole.LabelRole, self.risk_holder_label
        )
        self.risk_holder_field = QtWidgets.QLineEdit(parent=self.v_layout_widget)
        self.risk_holder_field.setObjectName("risk_holder_field")
        self.f_layout_widget_2.setWidget(
            1, QtWidgets.QFormLayout.ItemRole.FieldRole, self.risk_holder_field
        )
        self.risk_score_field = QtWidgets.QLineEdit(parent=self.v_layout_widget)
        self.risk_score_field.setObjectName("risk_score_field")
        self.f_layout_widget_2.setWidget(
            0, QtWidgets.QFormLayout.ItemRole.FieldRole, self.risk_score_field
        )
        self.risk_score_label = QtWidgets.QLabel(parent=self.v_layout_widget)
        self.risk_score_label.setObjectName("risk_score_label")
        self.f_layout_widget_2.setWidget(
            0, QtWidgets.QFormLayout.ItemRole.LabelRole, self.risk_score_label
        )
        self.v_layout_widget_fields.addLayout(self.f_layout_widget_2)
        self.risk_name_label.setBuddy(self.risk_name_field)
        self.risk_class_label.setBuddy(self.risk_class_combobox)
        self.risk_details_label.setBuddy(self.risk_details_field)
        self.risk_holder_label.setBuddy(self.risk_holder_field)
        self.risk_score_label.setBuddy(self.risk_score_field)

        # data loader
        self.risk_class_data_loader()
        self.risk_data_loader(risk_id)

        # data placeholder
        self.risk_class_data_placeholder()
        self.risk_data_placeholder()

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Изменение риска"))
        self.confirm_button.setText(_translate("Dialog", "Изменить"))
        self.cancel_button.setText(_translate("Dialog", "Отмена"))
        self.risk_name_label.setText(
            _translate("Dialog", "Название                                ")
        )
        self.risk_class_label.setText(_translate("Dialog", "Класс"))
        self.risk_prob_label.setText(
            _translate("Dialog", "Вероятность возникновения:   ")
        )
        self.risk_prob_symbol.setText(_translate("Dialog", "Очень низкая"))
        self.risk_prob_lower_edge.setText(_translate("Dialog", "<1%"))
        self.risk_prob_higher_edge.setText(_translate("Dialog", ">99%"))
        self.risk_damage_label.setText(
            _translate("Dialog", "Масштаб воздействия (ущерб):")
        )
        self.risk_damage_symbol.setText(_translate("Dialog", "Очень низкий"))
        self.risk_damage_lower_edge.setText(_translate("Dialog", "<100 т.р."))
        self.risk_damage_higher_edge.setText(_translate("Dialog", ">500 млн.р."))
        self.risk_details_label.setText(
            _translate("Dialog", "Описание                               ")
        )
        self.risk_holder_label.setText(_translate("Dialog", "Отвественный"))
        self.risk_score_label.setText(_translate("Dialog", "Уровень риска"))

    def probability_slider_slot(self):
        self.risk_score_auto_corrector()
        if self.risk_prob_slider.value() < 20:
            self.risk_prob_symbol.setText("Очень низкая")
            self.risk_prob_symbol.setStyleSheet("color: rgb(0, 255, 0)")
        elif self.risk_prob_slider.value() < 40:
            self.risk_prob_symbol.setText("Низкая")
            self.risk_prob_symbol.setStyleSheet("color: rgb(120, 180, 0)")
        elif self.risk_prob_slider.value() < 60:
            self.risk_prob_symbol.setText("Средняя")
            self.risk_prob_symbol.setStyleSheet("color: rgb(255, 180, 0)")
        elif self.risk_prob_slider.value() < 80:
            self.risk_prob_symbol.setText("Высокая")
            self.risk_prob_symbol.setStyleSheet("color: rgb(255, 100, 0)")
        else:
            self.risk_prob_symbol.setText("Очень высокая")
            self.risk_prob_symbol.setStyleSheet("color: rgb(255, 0, 0)")

    def damage_slider_slot(self):
        self.risk_score_auto_corrector()
        if self.risk_damage_slider.value() < 20:
            self.risk_damage_symbol.setText("Очень низкий")
            self.risk_damage_symbol.setStyleSheet("color: rgb(0, 255, 0)")
        elif self.risk_damage_slider.value() < 40:
            self.risk_damage_symbol.setText("Низкий")
            self.risk_damage_symbol.setStyleSheet("color: rgb(120, 180, 0)")
        elif self.risk_damage_slider.value() < 60:
            self.risk_damage_symbol.setText("Средний")
            self.risk_damage_symbol.setStyleSheet("color: rgb(255, 180, 0)")
        elif self.risk_damage_slider.value() < 80:
            self.risk_damage_symbol.setText("Высокий")
            self.risk_damage_symbol.setStyleSheet("color: rgb(255, 100, 0)")
        else:
            self.risk_damage_symbol.setText("Очень высокий")
            self.risk_damage_symbol.setStyleSheet("color: rgb(255, 0, 0)")

    def risk_score_auto_corrector(self):
        self.risk_score_field.setText(
            str((self.risk_prob_slider.value() + self.risk_damage_slider.value()) / 20)
        )

    def risk_class_data_loader(self):
        qc = queryComposer("risk_classification")
        raw_risk_class_data = qc.select_query(order_opt=["risk_class_id"])
        qc.close_connection()
        self.risk_class_id_ref = {
            r_class["risk_class_id"]: r_class["risk_class_name"]
            for r_class in raw_risk_class_data
        }

    def risk_data_loader(self, risk_id):
        qc = queryComposer("risk_register")
        self.current_risk_data = qc.select_query(
            conditions=[
                {"key_name": "risk_id", "key_value": risk_id, "comp_operand": "="}
            ]
        )[0]
        qc.close_connection()

    def risk_class_data_placeholder(self):
        self.risk_class_combobox.addItems(self.risk_class_id_ref.values())

    def risk_data_placeholder(self):
        self.risk_name_field.setText(self.current_risk_data["risk_name"])
        self.risk_class_combobox.setCurrentIndex(
            list(self.risk_class_id_ref.keys()).index(
                self.current_risk_data["risk_class_id"]
            )
        )
        self.risk_holder_field.setText(self.current_risk_data["risk_holder"])
        self.risk_score_field.setText(str(self.current_risk_data["risk_score"]))
        self.risk_details_field.setText(self.current_risk_data["risk_details"])
        self.risk_prob_slider.setValue(
            self.current_risk_data["risk_prob"]
            if self.current_risk_data["risk_prob"] is not None
            else 0
        )
        self.risk_damage_slider.setValue(
            self.current_risk_data["risk_damage"]
            if self.current_risk_data["risk_damage"] is not None
            else 0
        )

    def confirm_button_slot(self, Dialog: QtWidgets.QDialog = None) -> None:
        qc = queryComposer("risk_register")
        self.current_risk_data["risk_name"] = self.risk_name_field.text()
        self.current_risk_data["risk_class_id"] = list(self.risk_class_id_ref.keys())[
            self.risk_class_combobox.currentIndex()
        ]
        self.current_risk_data["risk_details"] = self.risk_details_field.toPlainText()
        self.current_risk_data["risk_score"] = self.risk_score_field.text()
        self.current_risk_data["risk_holder"] = self.risk_holder_field.text()
        self.current_risk_data["risk_prob"] = self.risk_prob_slider.value()
        self.current_risk_data["risk_damage"] = self.risk_damage_slider.value()
        qc.update_query(self.current_risk_data)
        qc.close_connection()
        Dialog.close()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = editRiskUIDialog()
    ui.setupUi(Dialog, 1)
    Dialog.show()
    sys.exit(app.exec())

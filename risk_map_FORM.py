# Form implementation generated from reading ui file 'risk_map_UIForm.ui'
#
# Created by: PyQt6 UI code generator 6.5.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from db_operation_functions import queryComposer
from report_construct import risk_map_report_constructor
from functools import partial


def value_to_interval_prob(value):
    """
    Значение в базе данных хранится в числах.
    Функция нужна чтобы преобразовать числа в слова


    :param value: value in database
    :type value: integer
    :return: description of value
    :rtype: str
    """
    if value is None:
        return "Очень низкая"
    if value < 20:
        return "Очень низкая"
    elif value < 40:
        return "Низкая"
    elif value < 60:
        return "Средняя"
    elif value < 80:
        return "Высокая"
    else:
        return "Очень высокая"


def value_to_interval_dmg(value):
    """
    Значение в базе данных хранится в числах.
    Функция нужна чтобы преобразовать числа в слова


    :param value: value in database
    :type value: integer
    :return: description of value
    :rtype: str
    """
    if value is None:
        return "    Очень низкий"
    if value < 20:
        return "Очень низкий"
    elif value < 40:
        return "Низкий"
    elif value < 60:
        return "Средний"
    elif value < 80:
        return "Высокий"
    else:
        return "Очень высокий"


class risk_map_report_UIDialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(580, 790)

        self.header_groupbox = QtWidgets.QGroupBox(parent=Dialog)
        self.header_groupbox.setGeometry(QtCore.QRect(10, 0, 270, 115))
        self.header_groupbox.setObjectName("header_groupbox")
        self.gridLayoutWidget = QtWidgets.QWidget(parent=self.header_groupbox)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(5, 10, 250, 105))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setVerticalSpacing(0)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.map_number_header_label = QtWidgets.QLabel(parent=self.gridLayoutWidget)
        self.map_number_header_label.setObjectName("map_number_header_label")

        self.gridLayout.addWidget(self.map_number_header_label, 4, 0, 1, 1)
        self.map_number_header_spinBox = QtWidgets.QSpinBox(
            parent=self.gridLayoutWidget
        )
        self.map_number_header_spinBox.setObjectName("map_number_header_spinBox")
        self.gridLayout.addWidget(self.map_number_header_spinBox, 4, 1, 1, 1)
        self.position_header_field = QtWidgets.QLineEdit(parent=self.gridLayoutWidget)
        self.position_header_field.setObjectName("position_header_field")
        self.gridLayout.addWidget(self.position_header_field, 1, 1, 1, 1)
        self.name_header_label = QtWidgets.QLabel(parent=self.gridLayoutWidget)
        self.name_header_label.setObjectName("name_header_label")
        self.gridLayout.addWidget(self.name_header_label, 2, 0, 1, 1)
        self.name_header_field = QtWidgets.QLineEdit(parent=self.gridLayoutWidget)
        self.name_header_field.setObjectName("name_header_field")
        self.gridLayout.addWidget(self.name_header_field, 2, 1, 1, 1)
        self.date_header_label = QtWidgets.QLabel(parent=self.gridLayoutWidget)
        self.date_header_label.setObjectName("date_header_label")
        self.gridLayout.addWidget(self.date_header_label, 3, 0, 1, 1)
        self.position_header_label = QtWidgets.QLabel(parent=self.gridLayoutWidget)
        self.position_header_label.setObjectName("position_header_label")
        self.gridLayout.addWidget(self.position_header_label, 1, 0, 1, 1)
        self.date_header_field = QtWidgets.QDateEdit(parent=self.gridLayoutWidget)
        self.date_header_field.setDateTime(
            QtCore.QDateTime(QtCore.QDate(2023, 1, 1), QtCore.QTime(0, 0, 0))
        )
        self.date_header_field.setMinimumDate(QtCore.QDate(1750, 10, 15))
        self.date_header_field.setCurrentSection(
            QtWidgets.QDateTimeEdit.Section.DaySection
        )
        self.date_header_field.setCalendarPopup(True)
        self.date_header_field.setObjectName("date_header_field")
        self.gridLayout.addWidget(self.date_header_field, 3, 1, 1, 1)
        self.signs_groupbox = QtWidgets.QGroupBox(parent=Dialog)
        self.signs_groupbox.setGeometry(QtCore.QRect(10, 365, 560, 385))
        self.signs_groupbox.setObjectName("signs_groupbox")
        self.map_creator_groupbox = QtWidgets.QGroupBox(parent=self.signs_groupbox)
        self.map_creator_groupbox.setGeometry(QtCore.QRect(0, 15, 560, 125))
        self.map_creator_groupbox.setStyleSheet(
            "QGroupBox::title {"
            "subcontrol-origin: margin;"
            "subcontrol-position: top left;"
            "padding-left: 25px; }"
        )
        self.map_creator_groupbox.setObjectName("map_creator_groupbox")
        self.map_creator_table = QtWidgets.QTableWidget(
            parent=self.map_creator_groupbox
        )
        self.map_creator_table.setGeometry(QtCore.QRect(10, 17, 300, 100))
        self.map_creator_table.setObjectName("map_creator_table")
        self.map_creator_table.setColumnCount(2)
        self.map_creator_table.setRowCount(0)
        self.map_creator_table.verticalHeader().setVisible(False)
        item = QtWidgets.QTableWidgetItem()
        self.map_creator_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.map_creator_table.setHorizontalHeaderItem(1, item)
        self.gridLayoutWidget_3 = QtWidgets.QWidget(parent=self.map_creator_groupbox)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(315, 10, 230, 90))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setVerticalSpacing(0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.creator_position_label = QtWidgets.QLabel(parent=self.gridLayoutWidget_3)
        self.creator_position_label.setObjectName("creator_position_label")
        self.gridLayout_2.addWidget(self.creator_position_label, 0, 0, 1, 1)
        self.creator_position_field = QtWidgets.QLineEdit(
            parent=self.gridLayoutWidget_3
        )
        self.creator_position_field.setObjectName("creator_position_field")
        self.gridLayout_2.addWidget(self.creator_position_field, 0, 1, 1, 1)
        self.creator_name_field = QtWidgets.QLineEdit(parent=self.gridLayoutWidget_3)
        self.creator_name_field.setObjectName("creator_name_field")
        self.gridLayout_2.addWidget(self.creator_name_field, 1, 1, 1, 1)
        self.creator_name_label = QtWidgets.QLabel(parent=self.gridLayoutWidget_3)
        self.creator_name_label.setObjectName("creator_name_label")
        self.gridLayout_2.addWidget(self.creator_name_label, 1, 0, 1, 1)
        self.add_creator_button = QtWidgets.QPushButton(parent=self.gridLayoutWidget_3)
        self.add_creator_button.setObjectName("add_creator_button")
        self.add_creator_button.clicked.connect(self.add_creator_button_slot)
        self.gridLayout_2.addWidget(self.add_creator_button, 2, 1, 1, 1)
        self.commision_groupbox = QtWidgets.QGroupBox(parent=self.signs_groupbox)
        self.commision_groupbox.setGeometry(QtCore.QRect(0, 140, 560, 125))
        self.commision_groupbox.setObjectName("commision_groupbox")
        self.commision_groupbox.setStyleSheet(
            "QGroupBox::title {"
            "subcontrol-origin: margin;"
            "subcontrol-position: top left;"
            "padding-left: 25px; }"
        )
        self.commision_table = QtWidgets.QTableWidget(parent=self.commision_groupbox)
        self.commision_table.setGeometry(QtCore.QRect(10, 17, 300, 100))
        self.commision_table.setObjectName("commision_table")
        self.commision_table.setColumnCount(2)
        self.commision_table.setRowCount(0)
        self.commision_table.verticalHeader().setVisible(False)
        item = QtWidgets.QTableWidgetItem()
        self.commision_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.commision_table.setHorizontalHeaderItem(1, item)
        self.gridLayoutWidget_4 = QtWidgets.QWidget(parent=self.commision_groupbox)
        self.gridLayoutWidget_4.setGeometry(QtCore.QRect(315, 10, 230, 90))
        self.gridLayoutWidget_4.setObjectName("gridLayoutWidget_4")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gridLayoutWidget_4)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_3.setVerticalSpacing(0)
        self.commision_position_label = QtWidgets.QLabel(parent=self.gridLayoutWidget_4)
        self.commision_position_label.setObjectName("commision_position_label")
        self.gridLayout_3.addWidget(self.commision_position_label, 0, 0, 1, 1)
        self.commision_position_field = QtWidgets.QLineEdit(
            parent=self.gridLayoutWidget_4
        )
        self.commision_position_field.setObjectName("commision_position_field")
        self.gridLayout_3.addWidget(self.commision_position_field, 0, 1, 1, 1)
        self.commision_name_field = QtWidgets.QLineEdit(parent=self.gridLayoutWidget_4)
        self.commision_name_field.setObjectName("commision_name_field")
        self.gridLayout_3.addWidget(self.commision_name_field, 1, 1, 1, 1)
        self.commision_name_label = QtWidgets.QLabel(parent=self.gridLayoutWidget_4)
        self.commision_name_label.setObjectName("commision_name_label")
        self.gridLayout_3.addWidget(self.commision_name_label, 1, 0, 1, 1)
        self.add_commision_button = QtWidgets.QPushButton(
            parent=self.gridLayoutWidget_4
        )
        self.add_commision_button.clicked.connect(self.add_commision_button_slot)
        self.add_commision_button.setObjectName("add_commision_button")
        self.gridLayout_3.addWidget(self.add_commision_button, 2, 1, 1, 1)
        self.acquaint_groupbox = QtWidgets.QGroupBox(parent=self.signs_groupbox)
        self.acquaint_groupbox.setGeometry(QtCore.QRect(0, 265, 560, 120))
        self.acquaint_groupbox.setStyleSheet(
            "QGroupBox::title {"
            "subcontrol-origin: margin;"
            "subcontrol-position: top left;"
            "padding-left: 25px; }"
        )
        self.acquaint_groupbox.setObjectName("acquaint_groupbox")
        self.acquaint_table = QtWidgets.QTableWidget(parent=self.acquaint_groupbox)
        self.acquaint_table.setGeometry(QtCore.QRect(10, 15, 300, 100))
        self.acquaint_table.setObjectName("acquaint_table")
        self.acquaint_table.setColumnCount(2)
        self.acquaint_table.setRowCount(0)
        self.acquaint_table.verticalHeader().setVisible(False)
        item = QtWidgets.QTableWidgetItem()
        self.acquaint_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.acquaint_table.setHorizontalHeaderItem(1, item)
        self.gridLayoutWidget_5 = QtWidgets.QWidget(parent=self.acquaint_groupbox)
        self.gridLayoutWidget_5.setGeometry(QtCore.QRect(315, 10, 230, 90))
        self.gridLayoutWidget_5.setObjectName("gridLayoutWidget_5")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.gridLayoutWidget_5)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.gridLayout_4.setVerticalSpacing(0)
        self.acquaint_position_label = QtWidgets.QLabel(parent=self.gridLayoutWidget_5)
        self.acquaint_position_label.setObjectName("acquaint_position_label")
        self.gridLayout_4.addWidget(self.acquaint_position_label, 0, 0, 1, 1)
        self.acquaint_position_field = QtWidgets.QLineEdit(
            parent=self.gridLayoutWidget_5
        )
        self.acquaint_position_field.setObjectName("acquaint_position_field")
        self.gridLayout_4.addWidget(self.acquaint_position_field, 0, 1, 1, 1)
        self.acquaint_name_field = QtWidgets.QLineEdit(parent=self.gridLayoutWidget_5)
        self.acquaint_name_field.setObjectName("acquaint_name_field")
        self.gridLayout_4.addWidget(self.acquaint_name_field, 1, 1, 1, 1)
        self.acquaint_name_label = QtWidgets.QLabel(parent=self.gridLayoutWidget_5)
        self.acquaint_name_label.setObjectName("acquaint_name_label")
        self.gridLayout_4.addWidget(self.acquaint_name_label, 1, 0, 1, 1)
        self.add_acquaint_button = QtWidgets.QPushButton(parent=self.gridLayoutWidget_5)
        self.add_acquaint_button.setObjectName("add_acquaint_button")
        self.add_acquaint_button.clicked.connect(self.add_acquaint_button_slot)
        self.gridLayout_4.addWidget(self.add_acquaint_button, 2, 1, 1, 1)
        self.table_groupbox = QtWidgets.QGroupBox(parent=Dialog)
        self.table_groupbox.setGeometry(QtCore.QRect(10, 115, 560, 250))
        self.table_groupbox.setObjectName("table_groupbox")
        self.risk_register_table = QtWidgets.QTableWidget(parent=self.table_groupbox)
        self.risk_register_table.setGeometry(QtCore.QRect(10, 20, 540, 220))
        self.risk_register_table.setObjectName("risk_register_table")
        self.risk_register_table.setColumnCount(4)
        self.risk_register_table.setRowCount(0)
        self.risk_register_table.verticalHeader().setVisible(False)
        item = QtWidgets.QTableWidgetItem()
        self.risk_register_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.risk_register_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.risk_register_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.risk_register_table.setHorizontalHeaderItem(3, item)
        self.risk_register_table.setColumnWidth(0, 10)
        self.risk_register_table.setColumnWidth(1, 10)
        self.risk_register_table.setColumnWidth(2, 250)
        self.risk_register_table.setColumnWidth(3, 200)
        self.body_groupbox = QtWidgets.QGroupBox(parent=Dialog)
        self.body_groupbox.setGeometry(QtCore.QRect(280, 0, 290, 115))
        self.body_groupbox.setObjectName("body_groupbox")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(parent=self.body_groupbox)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(5, 10, 270, 105))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.subdistrict_gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.subdistrict_gridLayout.setContentsMargins(0, 0, 0, 0)
        self.subdistrict_gridLayout.setVerticalSpacing(0)
        self.subdistrict_gridLayout.setObjectName("subdistrict_gridLayout")
        self.position_subdist_label = QtWidgets.QLabel(parent=self.gridLayoutWidget_2)
        self.position_subdist_label.setObjectName("position_subdist_label")
        self.subdistrict_gridLayout.addWidget(self.position_subdist_label, 1, 0, 1, 1)
        self.workspace_subdist_label = QtWidgets.QLabel(parent=self.gridLayoutWidget_2)
        self.workspace_subdist_label.setObjectName("workspace_subdist_label")
        self.subdistrict_gridLayout.addWidget(self.workspace_subdist_label, 2, 0, 1, 1)
        self.process_disc_subdist_label = QtWidgets.QLabel(
            parent=self.gridLayoutWidget_2
        )
        self.process_disc_subdist_label.setObjectName("process_disc_subdist_label")
        self.subdistrict_gridLayout.addWidget(
            self.process_disc_subdist_label, 3, 0, 1, 1
        )
        self.position_subdist_field = QtWidgets.QLineEdit(
            parent=self.gridLayoutWidget_2
        )
        self.position_subdist_field.setObjectName("position_subdist_field")
        self.subdistrict_gridLayout.addWidget(self.position_subdist_field, 1, 1, 1, 1)
        self.workspace_subdist_field = QtWidgets.QLineEdit(
            parent=self.gridLayoutWidget_2
        )
        self.workspace_subdist_field.setObjectName("workspace_subdist_field")
        self.subdistrict_gridLayout.addWidget(self.workspace_subdist_field, 2, 1, 1, 1)
        self.process_disc_subdist_field = QtWidgets.QLineEdit(
            parent=self.gridLayoutWidget_2
        )
        self.process_disc_subdist_field.setObjectName("process_disc_subdist_field")
        self.subdistrict_gridLayout.addWidget(
            self.process_disc_subdist_field, 3, 1, 1, 1
        )
        self.enterprise_header_label = QtWidgets.QLabel(parent=self.gridLayoutWidget_2)
        self.enterprise_header_label.setObjectName("enterprise_header_label")
        self.subdistrict_gridLayout.addWidget(self.enterprise_header_label, 0, 0, 1, 1)
        self.enterprise_header_field = QtWidgets.QLineEdit(
            parent=self.gridLayoutWidget_2
        )
        self.enterprise_header_field.setObjectName("enterprise_header_field")
        self.subdistrict_gridLayout.addWidget(self.enterprise_header_field, 0, 1, 1, 1)
        self.confirm_button = QtWidgets.QPushButton(parent=Dialog)
        self.confirm_button.setGeometry(QtCore.QRect(360, 755, 95, 30))
        self.confirm_button.setObjectName("confirm_button")
        confirm_button_x = partial(self.confirm_button_slot, Dialog)
        self.confirm_button.clicked.connect(confirm_button_x)
        self.cancel_button = QtWidgets.QPushButton(parent=Dialog)
        self.cancel_button.setGeometry(QtCore.QRect(470, 755, 95, 30))
        self.cancel_button.setObjectName("cancel_button")
        self.cancel_button.clicked.connect(Dialog.close)
        self.risk_data_placeholder()

        self.map_creator_list = []
        self.commision_list = []
        self.acquaint_list = []

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Карта рисков"))
        self.header_groupbox.setTitle(_translate("Dialog", "Гриф"))
        self.map_number_header_label.setText(_translate("Dialog", "Номер"))
        self.name_header_label.setText(_translate("Dialog", "Имя"))
        self.date_header_label.setText(_translate("Dialog", "Дата"))
        self.position_header_label.setText(_translate("Dialog", "Должность"))
        self.signs_groupbox.setTitle(_translate("Dialog", "Подписи"))
        self.map_creator_groupbox.setTitle(_translate("Dialog", "Карту составили"))
        item = self.map_creator_table.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "Должность"))
        item = self.map_creator_table.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Имя"))
        self.creator_position_label.setText(_translate("Dialog", "Должность"))
        self.creator_name_label.setText(_translate("Dialog", "Имя"))
        self.add_creator_button.setText(_translate("Dialog", "Добавить"))
        self.commision_groupbox.setTitle(_translate("Dialog", "Члены коммисии"))
        item = self.commision_table.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "Должность"))
        item = self.commision_table.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Имя"))
        self.commision_position_label.setText(_translate("Dialog", "Должность"))
        self.commision_name_label.setText(_translate("Dialog", "Имя"))
        self.add_commision_button.setText(_translate("Dialog", "Добавить"))
        self.acquaint_groupbox.setTitle(_translate("Dialog", "С картой ознакомлен"))
        item = self.acquaint_table.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "Должность"))
        item = self.acquaint_table.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Имя"))
        self.acquaint_position_label.setText(_translate("Dialog", "Должность"))
        self.acquaint_name_label.setText(_translate("Dialog", "Имя"))
        self.add_acquaint_button.setText(_translate("Dialog", "Добавить"))
        self.table_groupbox.setTitle(_translate("Dialog", "Таблица"))
        item = self.risk_register_table.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", ""))
        item = self.risk_register_table.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "Код"))
        item = self.risk_register_table.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "Название"))
        item = self.risk_register_table.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "Источник опасности"))
        self.body_groupbox.setTitle(_translate("Dialog", "Сведения о подразделении"))
        self.position_subdist_label.setText(_translate("Dialog", "Должность"))
        self.workspace_subdist_label.setText(_translate("Dialog", "Место работы"))
        self.process_disc_subdist_label.setText(_translate("Dialog", "Описание работ"))
        self.enterprise_header_label.setText(_translate("Dialog", "Организация"))
        self.confirm_button.setText(_translate("Dialog", "Создать"))
        self.cancel_button.setText(_translate("Dialog", "Отмена"))

    def load_data(self):
        qc = queryComposer("risk_register")
        raw_risk_data = qc.select_query()
        qc.close_connection()
        self.risk_data_id_ref = {
            risk["risk_id"]: {key: val for key, val in risk.items() if key != "risk_id"}
            for risk in raw_risk_data
        }

    def risk_data_placeholder(self):
        self.load_data()
        self.risk_register_table.setRowCount(len(self.risk_data_id_ref))

        for idx, (key, el) in enumerate(self.risk_data_id_ref.items()):
            checkbox_item = QtWidgets.QTableWidgetItem()
            checkbox_item.setFlags(
                checkbox_item.flags() | QtCore.Qt.ItemFlag.ItemIsUserCheckable
            )
            checkbox_item.setCheckState(QtCore.Qt.CheckState.Unchecked)
            self.risk_register_table.setItem(idx, 0, checkbox_item)

            self.risk_register_table.setItem(
                idx, 1, QtWidgets.QTableWidgetItem(str(key))
            )
            self.risk_register_table.setItem(
                idx, 2, QtWidgets.QTableWidgetItem(el["risk_name"])
            )
            self.risk_register_table.setItem(idx, 3, QtWidgets.QTableWidgetItem(""))

    def confirm_button_slot(self, Dialog):
        rep_risk_list = []
        for idx in range(self.risk_register_table.rowCount()):
            checkbox_item = self.risk_register_table.item(idx, 0)
            if checkbox_item.checkState() == QtCore.Qt.CheckState.Checked:
                rep_risk_list.append(
                    (
                        int(self.risk_register_table.item(idx, 1).text()),
                        self.risk_register_table.item(idx, 3).text(),
                    )
                )
        prefix_data = [
            self.position_header_field.text(),
            self.name_header_field.text(),
            self.date_header_field.text(),
        ]
        table_data = [
            [
                "Код риска",
                "Источник опасности",
                "Опасность",
                "Возможные последствия",
                "Вероятность риска",
                "Ущерб",
                "Меры по снижению риска",
            ]
        ]
        for idx, (risk_id, risk_dang) in enumerate(rep_risk_list):
            risk_data_tmp = self.risk_data_id_ref[risk_id]
            conditions = [
                {
                    "key_name": "risk_id",
                    "key_value": risk_id,
                    "comp_operand": "=",
                }
            ]
            qc = queryComposer("prevention_measures")
            raw_pm_data = qc.select_query(conditions=conditions)
            qc.close_connection()
            pm_desc = [run["prevention_measure_name"] for run in raw_pm_data]
            tmp_data = [
                str(risk_id),
                risk_dang,
                risk_data_tmp["risk_name"],
                risk_data_tmp["risk_details"],
                value_to_interval_prob(risk_data_tmp["risk_prob"]),
                value_to_interval_dmg(risk_data_tmp["risk_damage"]),
                "\n".join(pm_desc),
            ]
            table_data.append(tmp_data)

        # filling table here
        file_dialog = QtWidgets.QFileDialog()
        response = QtWidgets.QFileDialog.getSaveFileName(
            file_dialog,
            "Сохранение",
            f"Карта рисков № {self.map_number_header_spinBox.text()}.docx",
        )

        # file_dialog = QtWidgets.QFileDialog()
        # file_path = file_dialog.getSaveFileName("Save File")

        if response[0]:
            risk_map_report_constructor(
                prefix_data,
                self.map_number_header_spinBox.text(),
                self.enterprise_header_field.text(),
                [
                    self.position_subdist_field.text(),
                    self.workspace_subdist_field.text(),
                ],
                self.process_disc_subdist_field.text(),
                table_data,
                self.map_creator_list,
                self.commision_list,
                self.acquaint_list,
                response[0],
            )
            Dialog.close()

        # some other data

    def add_creator_button_slot(self):
        tmp_data = (self.creator_position_field.text(), self.creator_name_field.text())
        self.map_creator_list.append(tmp_data)
        self.creator_name_field.clear()
        self.creator_position_field.clear()
        self.load_creator_table_data()

    def load_creator_table_data(self):
        self.map_creator_table.setRowCount(len(self.map_creator_list))
        for idx, (c_pos, c_name) in enumerate(self.map_creator_list):
            self.map_creator_table.setItem(idx, 0, QtWidgets.QTableWidgetItem(c_pos))
            self.map_creator_table.setItem(idx, 1, QtWidgets.QTableWidgetItem(c_name))

    def add_commision_button_slot(self):
        tmp_data = (
            self.commision_position_field.text(),
            self.commision_name_field.text(),
        )
        self.commision_list.append(tmp_data)
        self.commision_name_field.clear()
        self.commision_position_field.clear()
        self.load_commision_data()

    def load_commision_data(self):
        self.commision_table.setRowCount(len(self.commision_list))
        for idx, (c_pos, c_name) in enumerate(self.commision_list):
            self.commision_table.setItem(idx, 0, QtWidgets.QTableWidgetItem(c_pos))
            self.commision_table.setItem(idx, 1, QtWidgets.QTableWidgetItem(c_name))

    def add_acquaint_button_slot(self):
        tmp_data = (
            self.acquaint_position_field.text(),
            self.acquaint_name_field.text(),
        )
        self.acquaint_list.append(tmp_data)
        self.acquaint_name_field.clear()
        self.acquaint_position_field.clear()
        self.load_acquaint_data()

    def load_acquaint_data(self):
        self.acquaint_table.setRowCount((len(self.acquaint_list)))
        for idx, (a_pos, a_name) in enumerate(self.acquaint_list):
            self.acquaint_table.setItem(idx, 0, QtWidgets.QTableWidgetItem(a_pos))
            self.acquaint_table.setItem(idx, 1, QtWidgets.QTableWidgetItem(a_name))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    app.setFont(QtGui.QFont("Segoe UI", 8))
    Dialog = QtWidgets.QDialog()
    ui = risk_map_report_UIDialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
